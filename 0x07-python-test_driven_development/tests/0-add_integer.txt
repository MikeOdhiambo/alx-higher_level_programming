Testing the module ''0-add_integer''
=====================================
import the module
    >>> add_integer = __import__('0-add_integer').add_integer

Adding two integers
    >>> add_integer(4, 13)
    17

Adding two floats
    >>> add_integer(4.1, 1.3)
    5

Adding an integer and a float
    >>> add_integer(4, 1.3)
    5

    >>> add_integer(4.1, 13)
    17

Adding negative integers and floats
    >>> add_integer(-4, 13)
    9

    >>> add_integer(4, -1.7)
    3

Default b if not supplied
    >>> add_integer(2)
    100

Missing arguments
    >>> add_integer()
    Traceback (most recent call last):
        ...
    TypeError: add_integer() missing 1 required positional argument: 'a'

    >>> add_integer(None, 13)
    Traceback (most recent call last):
        ...
    TypeError: a must be an integer

    >>> add_integer(4, None)
    Traceback (most recent call last):
        ...
    TypeError: b must be an integer

When strings are supplied
    >>> add_integer("Eren", 13)
    Traceback (most recent call last):
        ...
    TypeError: a must be an integer

    >>> add_integer(4, "Yeagar")
    Traceback (most recent call last):
        ...
    TypeError: b must be an integer

Too many args supplied:
    >>> add_integer(4, 1, 3)
    Traceback (most recent call last):
        ...
    TypeError: add_integer() takes from 1 to 2 positional arguments but 3 were given

Very large values
    >> add_integer(1000e1000)
    Traceback (most recent call last):
        ...
    OverflowError: cannot convert float infinity to integer